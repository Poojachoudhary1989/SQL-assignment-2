use mavenmovies;
                            -- BASIC AGGREGATE FUNCTIONS :
                            
-- qus1. Retreive the total no. of rentals made in sakila database.
select count(rental_id)from rental;

-- qus2. Find the average rental duration (in days) of movies rented from the sakila database.
select avg(rental_duration)from film;

                                -- STRING FUNCTIONS :
                                
-- qus3. Display the first name and last name of customer in uppercase.
select upper(first_name ), upper(last_name) from customer;

-- qus4. Extract the month from the rental date and display it alongside the rental ID.
select month(rental_date), rental_id from  rental;

                                -- GROUP BY  :
                                
-- qus5. Retreive the count of rentals for each customer(display customer ID and the count of rentals).
select customer_id ,count(rental_id) from rental group by customer_id;

-- qus6. Find the total revenue generated by each store.

select store_id ,sum(amount) from payment inner join rental on payment.rental_id=rental.rental_id
                      inner join customer on rental.customer_id=customer.customer_id group by store_id ;

                               -- ANOTHER METHOD

select store_id , sum(amount) from store inner join payment on store.store_id=payment.staff_id group by store_id;
                               
                               -- JOINS :
                               
-- qus7. Display the title of movies ,customer's first name and last name who rented it.

select title, first_name , last_name  ,rental_id from film inner join inventory on film.film_id=inventory.film_id 
                  inner join rental on inventory.inventory_id=rental.inventory_id
                  inner join customer on rental.customer_id=customer.customer_id group by rental_id ;
    
-- qus8.  Retreive the name of all actors who have appeared in the film 'Gone with the wind'.

select title , first_name ,last_name from film inner join film_actor on film.film_id=film_actor.film_id
                   inner join actor on film_actor.actor_id=actor.actor_id where title="Gone with the wind";
    
                   -- GROUP BY
-- qus1.Determine the total no of rentals for each category of movies.

select count(rental_id) , category_id from film_category inner join inventory on film_category.film_id=inventory.film_id 
                            inner join rental on inventory.inventory_id=rental.inventory_id group by category_id;

-- qus2. Find the average rental rate of movies in each language.

select  name as Language,avg(rental_rate) from film right join language on film.language_id=language.language_id group by name;

-- qus3. Retreive the customer names alongwith the total amount they have spent on rentals.

select first_name ,last_name, sum(amount) as total_amount from customer right join payment on customer.customer_id=payment.customer_id group by first_name,last_name;

-- qus4. List the titles of movies rented by each customer in a particular city.(ex.london)

select title ,first_name ,city from film inner join inventory on film.film_id=inventory.film_id
                   inner join rental on inventory.inventory_id=rental.inventory_id
                   inner join customer on rental.customer_id=customer.customer_id
                   inner join address on customer.address_id=address.address_id
                   inner join city on address.city_id=city.city_id;
                        
  
  -- ADVANCED JOINS AND GROUP BY

-- qus5. Display the top 5 rented movies along with the no of times they have been rented.

select title, count(rental_id) from film inner join inventory on film.film_id=inventory.film_id
     inner join rental on inventory.inventory_id=rental.inventory_id group by title  order by count(rental_id) desc limit 5;

-- qus6.Detrmine the customer who have rented movies from both store(store id 1 and store id 2).

select c.first_name as name, c.customer_id ,  s.store_id from customer c inner join rental r on r.customer_id=c.customer_id 
															  inner join inventory iv on iv.inventory_id=r.inventory_id
                                                              inner join store s on s.store_id=iv.store_id where s.store_id =1 and s.store_id=2
                                                              group by name,c.customer_id,s.store_id 
                                                              having count(distinct s.store_id);
                                                              